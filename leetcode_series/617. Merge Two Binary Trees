/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
       if(t1== NULL && t2== NULL) return NULL;
        TreeNode *root= new TreeNode(0);
        //root->left= root->right= NULL;
        //root->val = 0;
        if(t1!= NULL && t2!= NULL)
        {
            root->val = t1->val + t2->val;
            root->left= mergeTrees(t1->left, t2->left);
        root->right= mergeTrees(t1->right,t2->right);
        }
        else if(t1!= NULL) 
        {
            root->val += t1->val;
             root->left= mergeTrees(t1->left, NULL);
        root->right= mergeTrees(t1->right,NULL);
        }
        else
        {
            root->val +=t2->val;
            root->left= mergeTrees(NULL, t2->left);
            root->right= mergeTrees(NULL,t2->right);
        }
        //if(t2!= NULL) root->val +=t2->val;
      
        return root;
    }
};
